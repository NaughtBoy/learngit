<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Lint Report</title>
<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Roboto" />
<link rel="stylesheet" type="text/css" href="lint-results_files/hololike.css" />
<script language="javascript" type="text/javascript"> 
<!--
function reveal(id) {
if (document.getElementById) {
document.getElementById(id).style.display = 'block';
document.getElementById(id+'Link').style.display = 'none';
}
}
//--> 
</script>
</head>
<body>
<h1>Lint Report</h1>
<div class="titleSeparator"></div>
Check performed at Mon Aug 04 21:01:55 CST 2014.<br/>
0 errors and 27 warnings found:<br/><br/>
<table class="overview">
<tr><td></td><td class="categoryColumn"><a href="#Correctness">Correctness</a>
</td></tr>
<tr>
<td class="countColumn">2</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#DefaultLocale">DefaultLocale: Implied default locale in case conversion</a>
</td></tr>
<tr>
<td class="countColumn">1</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#OldTargetApi">OldTargetApi: Target SDK attribute is not targeting latest version</a>
</td></tr>
<tr>
<td class="countColumn">1</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#SimpleDateFormat">SimpleDateFormat: Implied locale in date format</a>
</td></tr>
<tr>
<td class="countColumn">1</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#GradleOverrides">GradleOverrides: Value overridden by Gradle build script</a>
</td></tr>
<tr><td></td><td class="categoryColumn"><a href="#Security">Security</a>
</td></tr>
<tr>
<td class="countColumn">1</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#AllowBackup">AllowBackup: Missing <code>allowBackup</code> attribute</a>
</td></tr>
<tr><td></td><td class="categoryColumn"><a href="#Performance">Performance</a>
</td></tr>
<tr>
<td class="countColumn">2</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#HandlerLeak">HandlerLeak: Handler reference leaks</a>
</td></tr>
<tr>
<td class="countColumn">1</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#UseSparseArrays">UseSparseArrays: HashMap can be replaced with SparseArray</a>
</td></tr>
<tr>
<td class="countColumn">2</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#UseValueOf">UseValueOf: Should use <code>valueOf</code> instead of <code>new</code></a>
</td></tr>
<tr>
<td class="countColumn">13</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#UnusedResources">UnusedResources: Unused resources</a>
</td></tr>
<tr><td></td><td class="categoryColumn"><a href="#Usability:Icons">Usability:Icons</a>
</td></tr>
<tr>
<td class="countColumn">2</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#IconDensities">IconDensities: Icon densities validation</a>
</td></tr>
<tr><td></td><td class="categoryColumn"><a href="#Usability">Usability</a>
</td></tr>
<tr>
<td class="countColumn">1</td><td class="issueColumn"><img border="0" align="top" src="lint-results_files/lint-warning.png" alt="Warning" />
<a href="#ViewConstructor">ViewConstructor: Missing View constructors for XML inflation</a>
</td></tr>
<tr><td></td><td class="categoryColumn"><a href="#MissingIssues">Disabled Checks (13)</a>
</td></tr></table>
<br/>
<a name="Correctness"></a>
<div class="category"><a href="#" title="Return to top">Correctness</a><div class="categorySeparator"></div>
</div>
<a name="DefaultLocale"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">DefaultLocale: Implied default locale in case conversion</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../src/com/dartou/lib/network/socket/ByteUtil.java">../src/com/dartou/lib/network/socket/ByteUtil.java</a>:86</span>: <span class="message">Implicitly using the default locale is a common source of bugs: Use toUpperCase(Locale) instead</span><br /><pre class="errorlines">
<span class="lineno">  83</span> 			if (hex.length() == 1) {
<span class="lineno">  84</span> 				hex = '0' + hex;
<span class="lineno">  85</span> 			}
<span class="lineno">  86</span> 			result.append(hex.<span class="errorspan">toUpperCase()+",");</span>
<span class="lineno">  87</span> 		}
<span class="lineno">  88</span> 		System.out.println();
</pre>
<span class="location"><a href="../src/com/dartou/lib/data/PublicDataControl.java">../src/com/dartou/lib/data/PublicDataControl.java</a>:54</span>: <span class="message">Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead</span><br /><pre class="errorlines">
<span class="lineno">  51</span> 		data.os = "android-"+android.os.Build.VERSION.RELEASE;
<span class="lineno">  52</span> 		String deviceId = ((TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE)).getDeviceId();
<span class="lineno">  53</span> //		String deviceId = ((TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE)).getDeviceId()+"hdjkashdjsa";
<span class="lineno">  54</span> 		data.deviceId = MD5Util.MD5(deviceId).<span class="errorspan">toLowerCase();</span>
<span class="lineno">  55</span> 
<span class="lineno">  56</span> 		NetworkInfo networkInfo = getNetworkType(context);
</pre>
</div>
<div class="metadata">Priority: 6 / 10<br/>
Category: Correctness</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Finds calls to locale-ambiguous <code>String</code> manipulation methods.</div>
<div class="explanation">
Calling <code>String#toLowerCase()</code> or <code>#toUpperCase()</code> <b>without specifying an explicit locale</b> is a common source of bugs. The reason for that is that those methods will use the current locale on the user's device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for <code>i</code> is <b>not</b> <code>I</code>.<br/>
<br/>
If you want the methods to just perform ASCII replacement, for example to convert an enum name, call <code>String#toUpperCase(Locale.US)</code> instead. If you really want to use the current locale, call <code>String#toUpperCase(Locale.getDefault())</code> instead.
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/reference/java/util/Locale.html#default_locale">http://developer.android.com/reference/java/util/Locale.html#default_locale</a>
</div><br/>To suppress this error, use the issue id "DefaultLocale" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="OldTargetApi"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">OldTargetApi: Target SDK attribute is not targeting latest version</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../build.gradle">../build.gradle</a>:15</span>: <span class="message">Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details.</span><br /><pre class="errorlines">
<span class="lineno">  12</span> 		buildToolsVersion "19.1"    
<span class="lineno">  13</span> 		defaultConfig {        
<span class="lineno">  14</span> 			minSdkVersion 10        
<span class="lineno">  15</span> 			<span class="errorspan">targetSdkVersion 10</span>
<span class="lineno">  16</span> 		}
<span class="lineno">  17</span> 		
</pre>
</div>
<div class="metadata">Priority: 6 / 10<br/>
Category: Correctness</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Checks that the manifest specifies a targetSdkVersion that is recent.</div>
<div class="explanation">
When your application runs on a version of Android that is more recent than your <code>targetSdkVersion</code> specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the <code>targetSdkVersion</code> is less than 14, your app may get an option button in the UI.<br/>
<br/>
To fix this issue, set the <code>targetSdkVersion</code> to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: <a href="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html">http://developer.android.com/reference/android/os/Build.VERSION_CODES.html</a>
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html">http://developer.android.com/reference/android/os/Build.VERSION_CODES.html</a>
</div><br/>To suppress this error, use the issue id "OldTargetApi" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="SimpleDateFormat"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">SimpleDateFormat: Implied locale in date format</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../src/com/dartou/lib/crash/CrashHandler.java">../src/com/dartou/lib/crash/CrashHandler.java</a>:50</span>: <span class="message">To get local formatting use getDateInstance(), getDateTimeInstance(), or getTimeInstance(), or use new SimpleDateFormat(String template, Locale locale) with for example Locale.US for ASCII dates.</span><br /><pre class="errorlines">
<span class="lineno">  47</span> 	private Map&lt;String, String> infos = new HashMap&lt;String, String>();
<span class="lineno">  48</span> 
<span class="lineno">  49</span> 	// &#29992;&#20110;&#26684;&#24335;&#21270;&#26085;&#26399;,&#20316;&#20026;&#26085;&#24535;&#25991;&#20214;&#21517;&#30340;&#19968;&#37096;&#20998;
<span class="lineno">  50</span> 	private DateFormat formatter = new <span class="errorspan">SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");</span>
<span class="lineno">  51</span> 
<span class="lineno">  52</span> 	/** &#20445;&#35777;&#21482;&#26377;&#19968;&#20010;CrashHandler&#23454;&#20363; */
</pre>
</div>
<div class="metadata">Priority: 6 / 10<br/>
Category: Correctness</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Using <code>SimpleDateFormat</code> directly without an explicit locale.</div>
<div class="explanation">
Almost all callers should use <code>getDateInstance()</code>, <code>getDateTimeInstance()</code>, or <code>getTimeInstance()</code> to get a ready-made instance of SimpleDateFormat suitable for the user's locale. The main reason you'd create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).<br/>
<br/>
Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing.
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/reference/java/text/SimpleDateFormat.html">http://developer.android.com/reference/java/text/SimpleDateFormat.html</a>
</div><br/>To suppress this error, use the issue id "SimpleDateFormat" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="GradleOverrides"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">GradleOverrides: Value overridden by Gradle build script</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../AndroidManifest.xml">../AndroidManifest.xml</a>:7</span>: <span class="message">This minSdkVersion value (10) is not used; it is always overridden by the value specified in the Gradle build script (10)</span><br /><pre class="errorlines">
<span class="lineno">   4</span>     android:versionCode="1"
<span class="lineno">   5</span>     android:versionName="1.0" >
<span class="lineno">   6</span>     
<span class="lineno">   7</span>     &lt;uses-sdk <span class="errorspan">android:minSdkVersion="10"/></span>
<span class="lineno">   8</span> &lt;/manifest>

</pre>
</div>
<div class="metadata">Priority: 4 / 10<br/>
Category: Correctness</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for values specified in the manifest file which are overridden by values in Gradle.</div>
<div class="explanation">
The value of (for example) <code>minSdkVersion</code> is only used if it is not specified in the <code>build.gradle</code> build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "GradleOverrides" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>

<a name="Security"></a>
<div class="category"><a href="#" title="Return to top">Security</a><div class="categorySeparator"></div>
</div>
<a name="AllowBackup"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">AllowBackup: Missing <code>allowBackup</code> attribute</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../AndroidManifest.xml">../AndroidManifest.xml</a></span>: <span class="message">Should explicitly set android:allowBackup to true or false (it's true by default, and that can have some security implications for the application's data)</span><br />
</div>
<div class="metadata">Note: This issue has an associated quickfix operation in Eclipse/ADT&nbsp;<img alt="Fix" border="0" align="top" src="lint-results_files/lint-run.png" />
<br>
Priority: 3 / 10<br/>
Category: Security</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Ensure that allowBackup is explicitly set in the application's manifest.</div>
<div class="explanation">
The allowBackup attribute determines if an application's data can be backed up and restored. It is documented at <a href="http://developer.android.com/reference/android/R.attr.html#allowBackup">http://developer.android.com/reference/android/R.attr.html#allowBackup</a><br/>
<br/>
By default, this flag is set to <code>true</code>. When this flag is set to <code>true</code>, application data can be backed up and restored by the user using <code>adb backup</code> and <code>adb restore</code>.<br/>
<br/>
This may have security consequences for an application. <code>adb backup</code> allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. <code>adb restore</code> allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.<br/>
<br/>
Setting <code>allowBackup="false"</code> opts an application out of both backup and restore.<br/>
<br/>
To fix this warning, decide whether your application should support backup, and explicitly set <code>android:allowBackup=(true|false)"</code>
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/reference/android/R.attr.html#allowBackup">http://developer.android.com/reference/android/R.attr.html#allowBackup</a>
</div><br/>To suppress this error, use the issue id "AllowBackup" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>

<a name="Performance"></a>
<div class="category"><a href="#" title="Return to top">Performance</a><div class="categorySeparator"></div>
</div>
<a name="HandlerLeak"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">HandlerLeak: Handler reference leaks</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../src/com/dartou/lib/view/CTimerLayout.java">../src/com/dartou/lib/view/CTimerLayout.java</a>:98</span>: <span class="message">This Handler class should be static or leaks might occur (com.dartou.lib.view.CTimerLayout.2)</span><br /><pre class="errorlines">
<span class="lineno">  95</span> 	};
<span class="lineno">  96</span> 	private ImageView img;
<span class="lineno">  97</span> 	
<span class="lineno">  98</span> 	Handler handler = new <span class="errorspan">Handler(){</span>
<span class="lineno">  99</span> 		public void handleMessage(android.os.Message msg) {
<span class="lineno"> 100</span> 			StopTimer();
</pre>
<span class="location"><a href="../src/com/dartou/lib/view/mydraw/SlidingMenu.java">../src/com/dartou/lib/view/mydraw/SlidingMenu.java</a>:360</span>: <span class="message">This Handler class should be static or leaks might occur (com.dartou.lib.view.mydraw.SlidingMenu.2)</span><br /><pre class="errorlines">
<span class="lineno"> 357</span> 
<span class="lineno"> 358</span> 	}
<span class="lineno"> 359</span> 	
<span class="lineno"> 360</span> 	Handler handler = new <span class="errorspan">Handler(){</span>
<span class="lineno"> 361</span> 		public void handleMessage(android.os.Message msg) {
<span class="lineno"> 362</span> 			switch (msg.what) {
</pre>
</div>
<div class="metadata">Priority: 4 / 10<br/>
Category: Performance</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Ensures that Handler classes do not hold on to a reference to an outer class.</div>
<div class="explanation">
Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a Looper or MessageQueue for a thread other than the main thread, then there is no issue. If the Handler is using the Looper or MessageQueue of the main thread, you need to fix your Handler declaration, as follows: Declare the Handler as a static class; In the outer class, instantiate a WeakReference to the outer class and pass this object to your Handler when you instantiate the Handler; Make all references to members of the outer class using the WeakReference object.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "HandlerLeak" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="UseSparseArrays"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">UseSparseArrays: HashMap can be replaced with SparseArray</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../src/com/dartou/lib/music/SoundPlayer.java">../src/com/dartou/lib/music/SoundPlayer.java</a>:31</span>: <span class="message">Use new SparseIntArray(...) instead for better performance</span><br /><pre class="errorlines">
<span class="lineno">  28</span> 		// &#21442;&#25968;3&#20026;&#38899;&#20048;&#25773;&#25918;&#25928;&#26524;
<span class="lineno">  29</span> 		mSoundPool = new SoundPool(50, AudioManager.STREAM_MUSIC, 100);
<span class="lineno">  30</span> 		mContext = context;
<span class="lineno">  31</span> 		map = <span class="errorspan">new HashMap&lt;Integer, Integer>();</span>
<span class="lineno">  32</span> 	}
<span class="lineno">  33</span> 	
</pre>
</div>
<div class="metadata">Priority: 4 / 10<br/>
Category: Performance</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for opportunities to replace HashMaps with the more efficient SparseArray.</div>
<div class="explanation">
For maps where the keys are of type integer, it's typically more efficient to use the Android <code>SparseArray</code> API. This check identifies scenarios where you might want to consider using <code>SparseArray</code> instead of <code>HashMap</code> for better performance.<br/>
<br/>
This is <b>particularly</b> useful when the value types are primitives like ints, where you can use <code>SparseIntArray</code> and avoid auto-boxing the values from <code>int</code> to <code>Integer</code>.<br/>
<br/>
If you need to construct a <code>HashMap</code> because you need to call an API outside of your control which requires a <code>Map</code>, you can suppress this warning using for example the <code>@SuppressLint</code> annotation.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "UseSparseArrays" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="UseValueOf"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">UseValueOf: Should use <code>valueOf</code> instead of <code>new</code></a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../src/com/dartou/lib/utils/FormatTransferUtil.java">../src/com/dartou/lib/utils/FormatTransferUtil.java</a>:335</span>: <span class="message">Use Float.valueOf(0.0) instead</span><br /><pre class="errorlines">
<span class="lineno"> 332</span> 	 */
<span class="lineno"> 333</span> 	public static float hBytesToFloat(byte[] b) {
<span class="lineno"> 334</span> 		int i = 0;
<span class="lineno"> 335</span> 		Float F = <span class="errorspan">new Float(0.0);</span>
<span class="lineno"> 336</span> 		i = ((((b[0] &amp; 0xff) &lt;&lt; 8 | (b[1] &amp; 0xff)) &lt;&lt; 8) | (b[2] &amp; 0xff)) &lt;&lt; 8
<span class="lineno"> 337</span> 				| (b[3] &amp; 0xff);
</pre>
<span class="location"><a href="../src/com/dartou/lib/utils/FormatTransferUtil.java">../src/com/dartou/lib/utils/FormatTransferUtil.java</a>:350</span>: <span class="message">Use Float.valueOf(0.0) instead</span><br /><pre class="errorlines">
<span class="lineno"> 347</span> 	 */
<span class="lineno"> 348</span> 	public static float lBytesToFloat(byte[] b) {
<span class="lineno"> 349</span> 		int i = 0;
<span class="lineno"> 350</span> 		Float F = <span class="errorspan">new Float(0.0);</span>
<span class="lineno"> 351</span> 		i = ((((b[3] &amp; 0xff) &lt;&lt; 8 | (b[2] &amp; 0xff)) &lt;&lt; 8) | (b[1] &amp; 0xff)) &lt;&lt; 8
<span class="lineno"> 352</span> 				| (b[0] &amp; 0xff);
</pre>
</div>
<div class="metadata">Priority: 4 / 10<br/>
Category: Performance</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for usages of <code>new</code> for wrapper classes which should use <code>valueOf</code> instead.</div>
<div class="explanation">
You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the <code>valueOf</code> factory method, such as <code>Integer.valueOf(42)</code>. This will typically use less memory because common integers such as 0 and 1 will share a single instance.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "UseValueOf" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="UnusedResources"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">UnusedResources: Unused resources</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../res/layout/activity_main.xml">../res/layout/activity_main.xml</a></span>: <span class="message">The resource R.layout.activity_main appears to be unused</span><br />
<span class="location"><a href="../res/layout/content_frame.xml">../res/layout/content_frame.xml</a></span>: <span class="message">The resource R.layout.content_frame appears to be unused</span><br />
<span class="location"><a href="../res/values/dimens.xml">../res/values/dimens.xml</a>:6</span>: <span class="message">The resource R.dimen.slidingmenu_offset appears to be unused</span><br /><pre class="errorlines">
<span class="lineno">   3</span>     &lt;!-- Default screen margins, per the Android Design guidelines. -->
<span class="lineno">   4</span>     &lt;dimen name="activity_horizontal_margin">16dp&lt;/dimen>
<span class="lineno">   5</span>     &lt;dimen name="activity_vertical_margin">16dp&lt;/dimen>
<span class="lineno">   6</span>     &lt;dimen <span class="errorspan">name="slidingmenu_offset">60dp&lt;/dimen></span>
<span class="lineno">   7</span>     &lt;dimen name="list_padding">10dp&lt;/dimen>
<span class="lineno">   8</span>     &lt;dimen name="shadow_width">15dp&lt;/dimen>
</pre>
<span class="location"><a href="../res/values/dimens.xml">../res/values/dimens.xml</a>:7</span>: <span class="message">The resource R.dimen.list_padding appears to be unused</span><br /><pre class="errorlines">
<span class="lineno">   4</span>     &lt;dimen name="activity_horizontal_margin">16dp&lt;/dimen>
<span class="lineno">   5</span>     &lt;dimen name="activity_vertical_margin">16dp&lt;/dimen>
<span class="lineno">   6</span>     &lt;dimen name="slidingmenu_offset">60dp&lt;/dimen>
<span class="lineno">   7</span>     &lt;dimen <span class="errorspan">name="list_padding">10dp&lt;/dimen></span>
<span class="lineno">   8</span>     &lt;dimen name="shadow_width">15dp&lt;/dimen>
<span class="lineno">   9</span> 
</pre>
<span class="location"><a href="../res/values/dimens.xml">../res/values/dimens.xml</a>:8</span>: <span class="message">The resource R.dimen.shadow_width appears to be unused</span><br /><pre class="errorlines">
<span class="lineno">   5</span>     &lt;dimen name="activity_vertical_margin">16dp&lt;/dimen>
<span class="lineno">   6</span>     &lt;dimen name="slidingmenu_offset">60dp&lt;/dimen>
<span class="lineno">   7</span>     &lt;dimen name="list_padding">10dp&lt;/dimen>
<span class="lineno">   8</span>     &lt;dimen <span class="errorspan">name="shadow_width">15dp&lt;/dimen></span>
<span class="lineno">   9</span> 
<span class="lineno">  10</span>     &lt;integer name="num_cols">1&lt;/integer>
</pre>
<button id="UnusedResourcesDivLink" onclick="reveal('UnusedResourcesDiv');" />+ 8 More Occurrences...</button>
<div id="UnusedResourcesDiv" style="display: none">
<span class="location"><a href="../res/values/dimens.xml">../res/values/dimens.xml</a>:10</span>: <span class="message">The resource R.integer.num_cols appears to be unused</span><br /><pre class="errorlines">
<span class="lineno">   7</span>     &lt;dimen name="list_padding">10dp&lt;/dimen>
<span class="lineno">   8</span>     &lt;dimen name="shadow_width">15dp&lt;/dimen>
<span class="lineno">   9</span> 
<span class="lineno">  10</span>     &lt;integer <span class="errorspan">name="num_cols">1&lt;/integer></span>
<span class="lineno">  11</span> 
<span class="lineno">  12</span> &lt;/resources>
</pre>
<span class="location"><a href="../res/layout/menu_frame.xml">../res/layout/menu_frame.xml</a></span>: <span class="message">The resource R.layout.menu_frame appears to be unused</span><br />
<span class="location"><a href="../res/layout/menu_frame_two.xml">../res/layout/menu_frame_two.xml</a></span>: <span class="message">The resource R.layout.menu_frame_two appears to be unused</span><br />
<span class="location"><a href="../res/drawable-hdpi/shadow.xml">../res/drawable-hdpi/shadow.xml</a></span>: <span class="message">The resource R.drawable.shadow appears to be unused</span><br />
<span class="location"><a href="../res/drawable-hdpi/shadowright.xml">../res/drawable-hdpi/shadowright.xml</a></span>: <span class="message">The resource R.drawable.shadowright appears to be unused</span><br />
<span class="location"><a href="../res/layout/slidingmenumain.xml">../res/layout/slidingmenumain.xml</a></span>: <span class="message">The resource R.layout.slidingmenumain appears to be unused</span><br />
<span class="location"><a href="../res/values/strings.xml">../res/values/strings.xml</a>:4</span>: <span class="message">The resource R.string.app_name appears to be unused</span><br /><pre class="errorlines">
<span class="lineno">   1</span> &lt;?xml version="1.0" encoding="utf-8"?>
<span class="lineno">   2</span> &lt;resources>
<span class="lineno">   3</span> 
<span class="lineno">   4</span>     &lt;string <span class="errorspan">name="app_name">DartouLib&lt;/string></span>
<span class="lineno">   5</span>     &lt;string name="action_settings">Settings&lt;/string>
<span class="lineno">   6</span>     &lt;string name="hello_world">Hello world!&lt;/string>
</pre>
<span class="location"><a href="../res/values/strings.xml">../res/values/strings.xml</a>:5</span>: <span class="message">The resource R.string.action_settings appears to be unused</span><br /><pre class="errorlines">
<span class="lineno">   2</span> &lt;resources>
<span class="lineno">   3</span> 
<span class="lineno">   4</span>     &lt;string name="app_name">DartouLib&lt;/string>
<span class="lineno">   5</span>     &lt;string <span class="errorspan">name="action_settings">Settings&lt;/string></span>
<span class="lineno">   6</span>     &lt;string name="hello_world">Hello world!&lt;/string>
<span class="lineno">   7</span> 
</pre>
</div>
</div>
<div class="metadata">Priority: 3 / 10<br/>
Category: Performance</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for unused resources.</div>
<div class="explanation">
Unused resources make applications larger and slow down builds.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "UnusedResources" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>

<a name="Usability:Icons"></a>
<div class="category"><a href="#" title="Return to top">Usability:Icons</a><div class="categorySeparator"></div>
</div>
<a name="IconDensities"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">IconDensities: Icon densities validation</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../res/drawable-mdpi">../res/drawable-mdpi</a></span>: <span class="message">Missing the following drawables in drawable-mdpi: room_clock.png, shadow.xml, shadowright.xml</span><br />
<span class="location"><a href="../res/drawable-xhdpi">../res/drawable-xhdpi</a></span>: <span class="message">Missing the following drawables in drawable-xhdpi: room_clock.png, shadow.xml, shadowright.xml</span><br />
</div>
<div class="metadata">Priority: 4 / 10<br/>
Category: Usability:Icons</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Ensures that icons provide custom versions for all supported densities.</div>
<div class="explanation">
Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.<br/>
<br/>
Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable <code>ANDROID_LINT_INCLUDE_LDPI=true</code>. For more information on current density usage, see <a href="http://developer.android.com/resources/dashboard/screens.html">http://developer.android.com/resources/dashboard/screens.html</a>
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/guide/practices/screens_support.html">http://developer.android.com/guide/practices/screens_support.html</a>
</div><br/>To suppress this error, use the issue id "IconDensities" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>

<a name="Usability"></a>
<div class="category"><a href="#" title="Return to top">Usability</a><div class="categorySeparator"></div>
</div>
<a name="ViewConstructor"></a>
<div class="issue">
<div class="id"><a href="#" title="Return to top">ViewConstructor: Missing View constructors for XML inflation</a><div class="issueSeparator"></div>
</div>
<div class="warningslist">
<span class="location"><a href="../src/com/dartou/lib/view/mydraw/CentLayout.java">../src/com/dartou/lib/view/mydraw/CentLayout.java</a></span>: <span class="message">Custom view com/dartou/lib/view/mydraw/CentLayout is missing constructor used by tools: (Context) or (Context,AttributeSet) or (Context,AttributeSet,int)</span><br />
</div>
<div class="metadata">Priority: 3 / 10<br/>
Category: Usability</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Checks that custom views define the expected constructors.</div>
<div class="explanation">
Some layout tools (such as the Android layout editor for Studio &amp; Eclipse) needs to find a constructor with one of the following signatures:<br/>
* <code>View(Context context)</code><br/>
* <code>View(Context context, AttributeSet attrs)</code><br/>
* <code>View(Context context, AttributeSet attrs, int defStyle)</code><br/>
<br/>
If your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if <code>View#isInEditMode()</code> is false, since that method will return <code>false</code> at runtime but true within a user interface editor.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "ViewConstructor" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>

<a name="MissingIssues"></a>
<div class="category">Disabled Checks<div class="categorySeparator"></div>
</div>
The following issues were not run by lint, either because the check is not enabled by default, or because it was disabled with a command line flag or via one or more lint.xml configuration files in the project directories.
<br/><br/>
<a name="BackButton"></a>
<div class="issue">
<div class="id">BackButton<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 6 / 10<br/>
Category: Usability</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for Back buttons, which are not common on the Android platform.</div>
<div class="explanation">
According to the Android Design Guide,<br/>
<br/>
"Other platforms use an explicit back button with label to allow the user to navigate up the application's hierarchy. Instead, Android uses the main action bar's app icon for hierarchical navigation and the navigation bar's back button for temporal navigation."<br/>
This check is not very sophisticated (it just looks for buttons with the label "Back"), so it is disabled by default to not trigger on common scenarios like pairs of Back/Next buttons to paginate through screens.
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/design/patterns/pure-android.html">http://developer.android.com/design/patterns/pure-android.html</a>
</div><br/>To suppress this error, use the issue id "BackButton" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="EasterEgg"></a>
<div class="issue">
<div class="id">EasterEgg<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 6 / 10<br/>
Category: Security</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for hidden easter eggs.</div>
<div class="explanation">
An "easter egg" is code deliberately hidden in the code, both from potential users and even from other developers. This lint check looks for code which looks like it may be hidden from sight.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "EasterEgg" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="FieldGetter"></a>
<div class="issue">
<div class="id">FieldGetter<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 4 / 10<br/>
Category: Performance</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Suggests replacing uses of getters with direct field access within a class.</div>
<div class="explanation">
Accessing a field within the class that defines a getter for that field is at least 3 times faster than calling the getter. For simple getters that do nothing other than return the field, you might want to just reference the local field directly instead.<br/>
<br/>
<b>NOTE</b>: As of Android 2.3 (Gingerbread), this optimization is performed automatically by Dalvik, so there is no need to change your code; this is only relevant if you are targeting older versions of Android.
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/guide/practices/design/performance.html#internal_get_set">http://developer.android.com/guide/practices/design/performance.html#internal_get_set</a>
</div><br/>To suppress this error, use the issue id "FieldGetter" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="GradleDynamicVersion"></a>
<div class="issue">
<div class="id">GradleDynamicVersion<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 4 / 10<br/>
Category: Correctness</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for dependencies using a dynamic version rather than a fixed version.</div>
<div class="explanation">
Using <code>+</code> in dependencies lets you automatically pick up the latest available version rather than a specific, named version. However, this is not recommended; your builds are not repeatable; you may have tested with a slightly different version than what the build server used. (Using a dynamic version as the major version number is more problematic than using it in the minor version position.)
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "GradleDynamicVersion" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="IconExpectedSize"></a>
<div class="issue">
<div class="id">IconExpectedSize<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 5 / 10<br/>
Category: Usability:Icons</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Ensures that launcher icons, notification icons etc have the correct size.</div>
<div class="explanation">
There are predefined sizes (for each density) for launcher icons. You should follow these conventions to make sure your icons fit in with the overall look of the platform.
</div>
<br/><div class="moreinfo">More info: <a href="http://developer.android.com/design/style/iconography.html">http://developer.android.com/design/style/iconography.html</a>
</div><br/>To suppress this error, use the issue id "IconExpectedSize" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="RtlCompat"></a>
<div class="issue">
<div class="id">RtlCompat<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 6 / 10<br/>
Category: Bi-directional Text</div>
Severity: <span class="error">Error</span><div class="summary">
Explanation: Looks for compatibility issues with RTL support.</div>
<div class="explanation">
API 17 adds a <code>textAlignment</code> attribute to specify text alignment. However, if you are supporting older versions than API 17, you must <b>also</b> specify a gravity or layout_gravity attribute, since older platforms will ignore the <code>textAlignment</code> attribute.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "RtlCompat" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="RtlEnabled"></a>
<div class="issue">
<div class="id">RtlEnabled<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 3 / 10<br/>
Category: Bi-directional Text</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for usages of right-to-left text constants without enabling RTL support.</div>
<div class="explanation">
To enable right-to-left support, when running on API 17 and higher, you must set the <code>android:supportsRtl</code> attribute in the manifest <code>&lt;application></code> element.<br/>
If you have started adding RTL attributes, but have not yet finished the migration, you can set the attribute to false to satisfy this lint check.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "RtlEnabled" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="RtlHardcoded"></a>
<div class="issue">
<div class="id">RtlHardcoded<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 5 / 10<br/>
Category: Bi-directional Text</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for hardcoded left/right constants which could be start/end for bidirectional text.</div>
<div class="explanation">
Using <code>Gravity#LEFT</code> and <code>Gravity#RIGHT</code> can lead to problems when a layout is rendered in locales where text flows from right to left. Use <code>Gravity#START</code> and <code>Gravity#END</code> instead. Similarly, in XML <code>gravity</code> and <code>layout_gravity</code> attributes, use <code>start</code> rather than <code>left</code>.<br/>
For XML attributes such as paddingLeft and <code>layout_marginLeft</code>, use <code>paddingStart</code> and <code>layout_marginStart</code>. <b>NOTE</b>: If your <code>minSdkVersion</code> is less than 17, you should add <b>both</b> the older left/right attributes <b>as well as</b> the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.<br/>
(Note: For <code>Gravity#LEFT</code> and <code>Gravity#START</code>, you can use these constants even when targeting older platforms, because the <code>start</code> bitmask is a superset of the <code>left</code> bitmask. Therefore, you can use <code>gravity="start"</code> rather than <code>gravity="left|start"</code>.)
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "RtlHardcoded" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="RtlSymmetry"></a>
<div class="issue">
<div class="id">RtlSymmetry<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 6 / 10<br/>
Category: Bi-directional Text</div>
Severity: <span class="error">Error</span><div class="summary">
Explanation: Ensures that specifying padding on one side is matched by padding on the other.</div>
<div class="explanation">
If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "RtlSymmetry" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="SelectableText"></a>
<div class="issue">
<div class="id">SelectableText<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 7 / 10<br/>
Category: Usability</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for TextViews which should probably allow their text to be selected.</div>
<div class="explanation">
If a <code>&lt;TextView></code> is used to display data, the user might want to copy that data and paste it elsewhere. To allow this, the <code>&lt;TextView></code> should specify <code>android:textIsSelectable="true"</code>.<br/>
<br/>
This lint check looks for TextViews which are likely to be displaying data: views whose text is set dynamically. This value will be ignored on platforms older than API 11, so it is okay to set it regardless of your <code>minSdkVersion</code>.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "SelectableText" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="StopShip"></a>
<div class="issue">
<div class="id">StopShip<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 10 / 10<br/>
Category: Correctness</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for comment markers of the form <code>//STOPSHIP</code> which indicates that code should not be released yet.</div>
<div class="explanation">
Using the comment <code>// STOPSHIP</code> can be used to flag code that is incomplete but checked in. This comment marker can be used to indicate that the code should not be shipped until the issue is addressed, and lint will look for these.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "StopShip" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="TypographyQuotes"></a>
<div class="issue">
<div class="id">TypographyQuotes<div class="issueSeparator"></div>
</div>
<div class="metadata">Note: This issue has an associated quickfix operation in Eclipse/ADT&nbsp;<img alt="Fix" border="0" align="top" src="lint-results_files/lint-run.png" />
<br>
Disabled By: Default<br/>
Priority: 5 / 10<br/>
Category: Usability:Typography</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for straight quotes which can be replaced by curvy quotes.</div>
<div class="explanation">
Straight single quotes and double quotes, when used as a pair, can be replaced by "curvy quotes" (or directional quotes). This can make the text more readable.<br/>
<br/>
Note that you should never use grave accents and apostrophes to quote, `like this'.<br/>
<br/>
(Also note that you should not use curvy quotes for code fragments.)
</div>
<br/><div class="moreinfo">More info: <a href="http://en.wikipedia.org/wiki/Quotation_mark">http://en.wikipedia.org/wiki/Quotation_mark</a>
</div><br/>To suppress this error, use the issue id "TypographyQuotes" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>
<a name="UnusedIds"></a>
<div class="issue">
<div class="id">UnusedIds<div class="issueSeparator"></div>
</div>
<div class="metadata">Disabled By: Default<br/>
Priority: 1 / 10<br/>
Category: Performance</div>
Severity: <span class="warning">Warning</span><div class="summary">
Explanation: Looks for unused id's.</div>
<div class="explanation">
This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.
</div>
<br/><div class="moreinfo">More info: </div><br/>To suppress this error, use the issue id "UnusedIds" as explained in the <a href="#SuppressInfo">Suppressing Warnings and Errors</a> section.<br/>
</div>

<a name="SuppressInfo"></a>
<div class="category">Suppressing Warnings and Errors<div class="categorySeparator"></div>
</div>
Lint errors can be suppressed in a variety of ways:<br/>
<br/>
1. With a @SuppressLint annotation in the Java code<br/>
2. With a tools:ignore attribute in the XML file<br/>
3. With a lint.xml configuration file in the project<br/>
4. With a lint.xml configuration file passed to lint via the --config flag<br/>
5. With the --ignore flag passed to lint.<br/>
<br/>
To suppress a lint warning with an annotation, add a @SuppressLint("id") annotation on the class, method or variable declaration closest to the warning instance you want to disable. The id can be one or more issue id's, such as "UnusedResources" or {"UnusedResources","UnusedIds"}, or it can be "all" to suppress all lint warnings in the given scope.<br/>
<br/>
To suppress a lint warning in an XML file, add a tools:ignore="id" attribute on the element containing the error, or one of its surrounding elements. You also need to define the namespace for the tools prefix on the root element in your document, next to the xmlns:android declaration:<br/>
* xmlns:tools="http://schemas.android.com/tools"<br/>
<br/>
To suppress lint warnings with a configuration XML file, create a file named lint.xml and place it at the root directory of the project in which it applies. (If you use the Eclipse plugin's Lint view, you can suppress errors there via the toolbar and Eclipse will create the lint.xml file for you.).<br/>
<br/>
The format of the lint.xml file is something like the following:<br/>
<br/>
&lt;?xml version="1.0" encoding="UTF-8"?><br/>
&lt;lint><br/>
    &lt;!-- Disable this given check in this project --><br/>
    &lt;issue id="IconMissingDensityFolder" severity="ignore" /><br/>
<br/>
    &lt;!-- Ignore the ObsoleteLayoutParam issue in the given files --><br/>
    &lt;issue id="ObsoleteLayoutParam"><br/>
        &lt;ignore path="res/layout/activation.xml" /><br/>
        &lt;ignore path="res/layout-xlarge/activation.xml" /><br/>
    &lt;/issue><br/>
<br/>
    &lt;!-- Ignore the UselessLeaf issue in the given file --><br/>
    &lt;issue id="UselessLeaf"><br/>
        &lt;ignore path="res/layout/main.xml" /><br/>
    &lt;/issue><br/>
<br/>
    &lt;!-- Change the severity of hardcoded strings to "error" --><br/>
    &lt;issue id="HardcodedText" severity="error" /><br/>
&lt;/lint><br/>
<br/>
To suppress lint checks from the command line, pass the --ignore flag with a comma separated list of ids to be suppressed, such as:<br/>
"lint --ignore UnusedResources,UselessLeaf /my/project/path"<br/>


</body>
</html>